{"version":3,"sources":["controler.ts","pdfread/pdfReader.tsx","signPad/signPad.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Visibility","reducer","state","action","type","Preview","visibility","SignPad","pdfjs","GlobalWorkerOptions","workerSrc","options","cMapUrl","cMapPacked","PdfReader","dispatch","React","useState","url","setUrl","imagUrl","setImageUrl","imgRef","createRef","pdfParentRef","numPages","setNumPages","imageProps","useRef","height","width","top","left","scale","scaleWidth","scaleHeight","pdfPageProps","List","pdfFile","imgFile","useEffect","preventDefault","e","document","addEventListener","removeEventListener","useSpring","x","y","api","bind","useDrag","active","movement","mx","my","current","dx","dy","calcX","Math","max","min","window","innerWidth","isBrowser","calcY","innerHeight","scrollTop","scaleImgHeight","pageIndex","pageHeight","get","viewHeight","distens2PageBottom","start","className","style","ref","div","src","draggable","onLoad","img","offsetHeight","offsetWidth","file","onLoadSuccess","doc","Array","from","el","index","pageNumber","info","page","list","data","originalHeight","originalWidth","viewWidth","set","onPageLoadSuccess","htmlFor","id","accept","onChange","files","target","console","log","length","URL","createObjectURL","Button","size","onClick","imageWidth","imageHeight","pageScale","imageBottom","fixY","fixX","param","FormData","append","axios","post","headers","then","t","pdf_name","name","img_name","pdf_page","img_width","img_height","position_x","position_y","r","filename","navigator","userAgent","indexOf","open","a","createElement","setAttribute","href","download","body","appendChild","click","revokeObjectURL","catch","Slider","progress","defaultValue","value","newScale","oldScale","signaturepad","resizeCanvas","canvas","ratio","devicePixelRatio","getContext","clear","dataURL","blob","parts","split","contentType","raw","atob","rawLength","uInt8Array","Uint8Array","i","charCodeAt","Blob","dataURLToBlob","SignaturePad","backgroundColor","penColor","useLayoutEffect","data-action","signPad","color","round","random","toData","pop","fromData","isEmpty","toDataURL","App","useReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94b8d37c.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface State {\n  visibility: Visibility;\n}\n\nexport enum Visibility {\n  Preview,\n  SignPad\n}\n\nexport type Action = { type: Visibility }\n\nexport function reducer(state: State, action: Action): State {\n    switch (action.type) {\n        case Visibility.Preview:\n          return {\n            ...state,\n            visibility: Visibility.Preview,\n          };\n        case Visibility.SignPad:\n          return {\n            ...state,\n            visibility: Visibility.SignPad,\n          };\n      }\n}\n\nexport interface DispatchProps {\n    dispatch: React.Dispatch<Action>\n}\n","import \"./pdf.css\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport React, { useState } from \"react\";\nimport { Document, Page, pdfjs, PDFPageProxy } from \"react-pdf\";\nimport { DispatchProps, Visibility } from \"../controler\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { PDFDocumentProxy } from \"pdfjs-dist/types/display/api\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { useDrag } from \"@use-gesture/react\";\nimport { Slider, Button } from \"rsuite\";\nimport { isBrowser } from \"react-device-detect\";\nimport { List } from \"immutable\";\npdfjs.GlobalWorkerOptions.workerSrc = `https://chuntian.press/pdf_sign_react/pdf.worker.js`;\n\nconst options = {\n  cMapUrl: \"cmaps/\",\n  cMapPacked: true,\n};\n\ninterface MergeImage {\n  pdf_name: string;\n  img_name: string;\n  pdf_page: number;\n  img_width: number;\n  img_height: number;\n  position_x: number;\n  position_y: number;\n}\n\ninterface PdfPage {\n  index: number;\n  originalWidth: number;\n  originalHeight: number;\n  viewWidth: number;\n  viewHeight: number;\n  scale: number;\n}\n\nexport default function PdfReader({ dispatch }: DispatchProps) {\n  const [url, setUrl] = React.useState<string|null>(null);\n  const [imagUrl, setImageUrl] = React.useState<string|null>(null);\n  const imgRef = React.createRef<HTMLImageElement>();\n  const pdfParentRef = React.createRef<HTMLDivElement>();\n  const [numPages, setNumPages] = useState(1);\n  const imageProps = React.useRef({\n    height: 0,\n    width: 0,\n    top: 0,\n    left: 0,\n    scale: 1,\n    scaleWidth: 0,\n    scaleHeight: 0,\n  });\n  const pdfPageProps = React.useRef<List<PdfPage>>(List());\n  const pdfFile = React.useRef<File>();\n  const imgFile = React.useRef<File>();\n  const onUploadPdf = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    console.log(files)\n    if (files && files.length > 0) {\n      console.log(URL.createObjectURL(files[0]))\n      setUrl(URL.createObjectURL(files[0]));\n      pdfFile.current = files[0];\n    }\n  };\n  const onUploadImg = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      console.log(URL.createObjectURL(file))\n      setImageUrl(URL.createObjectURL(file));\n      imgFile.current = file;\n    }\n  };\n\n  function onImgLoad() {\n    const img = imgRef.current;\n    if (img) {\n      imageProps.current = {\n        ...imageProps.current,\n        height: img.offsetHeight,\n        width: img.offsetWidth,\n      };\n    }\n  }\n\n  function onSave() {\n    const scrollTop = pdfParentRef.current?.scrollTop || 0;\n    const {\n      width: imageWidth,\n      height: imageHeight,\n      scale,\n      top,\n      left,\n      scaleWidth,\n      scaleHeight,\n    } = imageProps.current;\n    const scaleImgHeight = imageHeight * scale;\n    let pageIndex = 0;\n    let pageHeight = 0;\n    let pageScale = 1;\n    const imageBottom = scrollTop + top + scaleImgHeight - scaleHeight;\n    while (pageHeight < imageBottom) {\n      const page = pdfPageProps.current.get(pageIndex)!!;\n      pageHeight = pageHeight + page.viewHeight + 8;\n      pageIndex = pageIndex + 1;\n      pageScale = page.scale;\n    }\n    const fixY = (pageHeight - 8 - imageBottom) * pageScale;\n    const fixX = (left - scaleWidth - (isBrowser ? 14 : 20)) * pageScale;\n    const param = new FormData();\n    param.append(\"file\", imgFile.current!!);\n    axios\n      .post(\"https://pdfsign.chuntian.press/savefile\", param, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      })\n      .then((t) => {\n        const param = new FormData();\n        param.append(\"file\", pdfFile.current!!);\n        return axios.post(\"https://pdfsign.chuntian.press/savefile\", param, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      })\n      .then((t) => {\n        const data: MergeImage = {\n          pdf_name: pdfFile.current!!.name,\n          img_name: imgFile.current!!.name,\n          pdf_page: pageIndex,\n          img_width: imageWidth * scale * pageScale,\n          img_height: scaleImgHeight * pageScale,\n          position_x: fixX,\n          position_y: fixY,\n        };\n        return axios.post(\"https://pdfsign.chuntian.press/mergeImage\", data);\n      })\n      .then((r:AxiosResponse<string>) =>\n        download(`https://pdfsign.chuntian.press/publick/${r.data}`, \"merge_image.pdf\")\n      )\n      .catch((e) => console.log(e));\n  }\n\n  function download(url: string, filename: string) {\n    if (\n      navigator.userAgent.indexOf(\"Safari\") > -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      window.open(url);\n    } else {\n      var a = document.createElement(\"a\");\n      a.setAttribute(\"display\", \"none\");\n      a.href = url;\n      a.download = filename;\n\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  }\n\n  function onSign() {\n    dispatch({ type: Visibility.SignPad });\n  }\n\n  function onDocumentLoadSuccess(doc: PDFDocumentProxy) {\n    setNumPages(doc.numPages);\n  }\n\n  function onPageLoadSuccess(index: number, page: PDFPageProxy) {\n    const list = pdfPageProps.current;\n    const data = {\n      index: index,\n      originalHeight: page.originalHeight,\n      originalWidth: page.originalWidth,\n      viewHeight: page.height,\n      viewWidth: page.width,\n      scale: page.originalHeight / page.height,\n    };\n    pdfPageProps.current = list.set(index, data);\n  }\n\n  React.useEffect(() => {\n    const preventDefault = (e: Event) => e.preventDefault();\n    document.addEventListener(\"gesturestart\", preventDefault);\n    document.addEventListener(\"gesturechange\", preventDefault);\n\n    return () => {\n      document.removeEventListener(\"gesturestart\", preventDefault);\n      document.removeEventListener(\"gesturechange\", preventDefault);\n    };\n  }, []);\n\n  const [{ x, y, scale }, api] = useSpring(() => ({ x: 0, y: 0, scale: 1 }));\n\n  const bind = useDrag(({ active, movement: [mx, my] }) => {\n    const { width, height, scaleHeight, scaleWidth, left, top, scale } =\n      imageProps.current;\n    const dx = left + mx;\n    const dy = top + my;\n    const calcX = Math.max(\n      Math.min(\n        dx,\n        window.innerWidth - (isBrowser ? 32 : 20) - width - scaleWidth\n      ),\n      (isBrowser ? 14 : 20) + scaleWidth\n    );\n    const calcY = Math.max(\n      Math.min(dy, window.innerHeight - 40 - height - scaleHeight),\n      0 + scaleHeight\n    );\n    if (!active) {\n      // 偏移计算\n      const scrollTop = pdfParentRef.current?.scrollTop;\n      if (scrollTop) {\n        const scaleImgHeight = height * scale;\n        let pageIndex = 0;\n        let pageHeight = 0;\n        while (pageHeight < scrollTop + calcY - scaleHeight) {\n          const page = pdfPageProps.current.get(pageIndex)!!;\n          pageHeight = pageHeight + page.viewHeight + 8;\n          pageIndex = pageIndex + 1;\n        }\n        const distens2PageBottom =\n          pageHeight - 8 - calcY - scrollTop + scaleHeight - scaleImgHeight;\n        if (distens2PageBottom < 0) {\n          // 放在了页的边缘\n          // 计算向上平移还是向下平移\n          // todo 保存\n          if (pageHeight - 8 - scrollTop + scaleHeight > scaleImgHeight) {\n            // 上面可以放，放到上面\n            imageProps.current = {\n              ...imageProps.current,\n              top: calcY + distens2PageBottom,\n              left: calcX,\n            };\n            api.start({ x: calcX, y: imageProps.current.top });\n          } else {\n            // 放到下面\n            imageProps.current = {\n              ...imageProps.current,\n              top: calcY + scaleImgHeight + distens2PageBottom + 8,\n              left: calcX,\n            };\n            api.start({ x: calcX, y: imageProps.current.top });\n          }\n          return;\n        }\n      }\n    }\n    if (!active) {\n      imageProps.current = {\n        ...imageProps.current,\n        top: calcY,\n        left: calcX,\n      };\n    }\n    api.start({ x: calcX, y: calcY });\n  });\n\n  return (\n    <div className=\"root\">\n      <div className=\"root\" style={{ height: \"100%\" }}>\n        <div className=\"pdf\" ref={pdfParentRef}>\n          {imagUrl && (\n            <animated.div className=\"card\" {...bind()} style={{ x, y, scale }}>\n              <img\n                src={imagUrl}\n                ref={imgRef}\n                className=\"image\"\n                draggable={false}\n                onLoad={onImgLoad}\n              />\n            </animated.div>\n          )}\n          {url && (\n            <Document\n              file={url}\n              onLoadSuccess={onDocumentLoadSuccess}\n              options={options}\n            >\n              {Array.from(new Array(numPages), (el, index) => (\n                <Page\n                  key={`page_${index + 1}`}\n                  pageNumber={index + 1}\n                  className=\"pdf-page\"\n                  onLoadSuccess={(info) => onPageLoadSuccess(index, info)}\n                  width={window.innerWidth - 40}\n                />\n              ))}\n            </Document>\n          )}\n        </div>\n        <div className=\"gride\">\n          <label\n            htmlFor=\"input_pdf\"\n            className=\"rs-btn rs-btn-default input-label rs-btn-sm\"\n          >\n            上传pdf\n          </label>\n          <input\n            id=\"input_pdf\"\n            type=\"file\"\n            accept=\".pdf\"\n            className=\"hiden\"\n            onChange={onUploadPdf}\n          />\n          <label\n            htmlFor=\"input_img\"\n            className=\"rs-btn rs-btn-default input-label rs-btn-sm\"\n          >\n            上传签名\n          </label>\n          <input\n            id=\"input_img\"\n            type=\"file\"\n            accept=\"image/jpeg\"\n            className=\"hiden\"\n            onChange={onUploadImg}\n          />\n          <Button size=\"sm\" onClick={onSign}>\n            生成签名\n          </Button>\n          <Button size=\"sm\" onClick={onSave} className=\"marginLeft4\">\n            保存\n          </Button>\n          <div className=\"slider\">\n            <Slider\n              progress\n              min={10}\n              max={200}\n              defaultValue={100}\n              onChange={(value) => {\n                const newScale = value / 100;\n                const {\n                  width,\n                  height,\n                  left,\n                  top,\n                  scale: oldScale,\n                } = imageProps.current;\n                const scaleWidth = (width * (newScale - 1)) / 2;\n                const scaleHeight = (height * (newScale - 1)) / 2;\n                //计算左边移动还是右边移动\n                let fixX = left;\n                if (left * 2 + width * newScale < window.innerWidth) {\n                  // 向右移动\n                  fixX += (width * (newScale - oldScale)) / 2;\n                } else {\n                  fixX -= (width * (newScale - oldScale)) / 2;\n                }\n                const fixY = top - (height * (newScale - oldScale)) / 2;\n                imageProps.current = {\n                  ...imageProps.current,\n                  scale: newScale,\n                  scaleWidth,\n                  scaleHeight,\n                  left: fixX,\n                  top: fixY,\n                };\n                api.start({\n                  scale: newScale,\n                  x: fixX,\n                  y: fixY,\n                });\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./signPad.css\";\nimport React from \"react\";\nimport SignaturePad from \"signature_pad\";\nimport { Button } from \"rsuite\";\nimport { DispatchProps, Visibility } from \"../controler\";\n\nexport default function SignPad({ dispatch }: DispatchProps) {\n  const ref = React.createRef<HTMLCanvasElement>();\n  const signaturepad = React.useRef<SignaturePad>();\n  React.useEffect(() => {\n    signaturepad.current = new SignaturePad(ref.current!!, {\n      backgroundColor: \"rgb(255, 255, 255)\",\n      penColor: \"rgb(0, 0, 0)\",\n    });\n  }, []);\n\n  React.useLayoutEffect(() => {\n    window.addEventListener(\"resize\", resizeCanvas);\n    resizeCanvas();\n    return () => window.removeEventListener(\"resize\", resizeCanvas);\n  });\n\n  function resizeCanvas() {\n    const canvas = ref.current;\n    if (canvas === null) return;\n    var ratio = Math.max(window.devicePixelRatio || 1, 1);\n    canvas.width = canvas.offsetWidth * ratio;\n    canvas.height = canvas.offsetHeight * ratio;\n    canvas.getContext(\"2d\")?.scale(ratio, ratio);\n    signaturepad.current?.clear();\n  }\n\n  function onClear() {\n    signaturepad.current?.clear();\n  }\n\n  function onUndo() {\n    const signPad = signaturepad.current;\n    if (!signPad) return;\n    const data = signPad.toData();\n    if (data) {\n      data.pop();\n      signPad.fromData(data);\n    }\n  }\n\n  function onSavePng() {\n    const signPad = signaturepad.current;\n    if (!signPad || signPad.isEmpty()) return;\n    const dataURL = signPad.toDataURL();\n    download(dataURL, \"signature.png\");\n  }\n\n  function onSaveJPG() {\n    const signPad = signaturepad.current;\n    if (!signPad || signPad.isEmpty()) return;\n    const dataURL = signPad.toDataURL(\"image/jpeg\");\n    download(dataURL, \"signature.jpg\");\n  }\n\n  function onSaveSVG() {\n    const signPad = signaturepad.current;\n    if (!signPad || signPad.isEmpty()) return;\n    const dataURL = signPad.toDataURL(\"image/svg+xml\");\n    download(dataURL, \"signature.svg\");\n  }\n\n  function download(dataURL: string, filename: string) {\n    if (\n      navigator.userAgent.indexOf(\"Safari\") > -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      window.open(dataURL);\n    } else {\n      var blob = dataURLToBlob(dataURL);\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement(\"a\");\n      a.setAttribute(\"display\", \"none\");\n      a.href = url;\n      a.download = filename;\n\n      document.body.appendChild(a);\n      a.click();\n\n      window.URL.revokeObjectURL(url);\n    }\n  }\n\n  function dataURLToBlob(dataURL: string): Blob {\n    // Code taken from https://github.com/ebidel/filer.js\n    var parts = dataURL.split(\";base64,\");\n    var contentType = parts[0].split(\":\")[1];\n    var raw = window.atob(parts[1]);\n    var rawLength = raw.length;\n    var uInt8Array = new Uint8Array(rawLength);\n\n    for (var i = 0; i < rawLength; ++i) {\n      uInt8Array[i] = raw.charCodeAt(i);\n    }\n    return new Blob([uInt8Array], { type: contentType });\n  }\n\n  function onChangeColor() {\n    const signPad = signaturepad.current;\n    if (!signPad) return;\n    const r = Math.round(Math.random() * 255);\n    const g = Math.round(Math.random() * 255);\n    const b = Math.round(Math.random() * 255);\n    const color = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    signPad.penColor = color;\n  }\n\n  function onQuit() {\n    dispatch({ type: Visibility.Preview });\n  }\n\n  return (\n    <div className=\"root\">\n      <div className=\"signature-pad-parent\">\n        <div id=\"signature-pad\" className=\"signature-pad\">\n          <div className=\"signature-pad--body\">\n            <canvas ref={ref}></canvas>\n          </div>\n          <div className=\"signature-pad--footer\">\n            <div className=\"description\">请在上方签名</div>\n\n            <div className=\"signature-pad--actions\">\n              <div>\n                <Button\n                  size=\"sm\"\n                  className=\"button clear\"\n                  data-action=\"clear\"\n                  onClick={onClear}\n                >\n                  清空\n                </Button>\n                <Button\n                  size=\"sm\"\n                  data-action=\"change-color\"\n                  onClick={onChangeColor}\n                >\n                  改变颜色\n                </Button>\n                <Button\n                  size=\"sm\"\n                  className=\"button\"\n                  data-action=\"undo\"\n                  onClick={onUndo}\n                >\n                  回退\n                </Button>\n              </div>\n              <div>\n                <Button\n                  size=\"sm\"\n                  className=\"button save\"\n                  data-action=\"save-png\"\n                  onClick={onSaveJPG}\n                >\n                  保存\n                </Button>\n                <Button\n                  size=\"sm\"\n                  type=\"button\"\n                  className=\"button save signature-pad-exit\"\n                  data-action=\"save-png\"\n                  onClick={onQuit}\n                >\n                  退出\n                </Button>\n                {/* <button\n                type=\"button\"\n                className=\"button save\"\n                data-action=\"save-jpg\"\n                onClick={onSaveJPG}\n              >\n                保存为JPG\n              </button>\n              <button\n                type=\"button\"\n                className=\"button save\"\n                data-action=\"save-svg\"\n                onClick={onSaveSVG}\n              >\n                保存为SVG\n              </button> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport PdfReader from \"./pdfread/pdfReader\";\nimport SignPad from \"./signPad/signPad\";\nimport { reducer, Visibility } from \"./controler\";\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    visibility: Visibility.Preview,\n  });\n  return (\n    <>\n      {state.visibility === Visibility.Preview ? (\n        <PdfReader dispatch={dispatch} />\n      ) : (\n        <SignPad dispatch={dispatch} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}